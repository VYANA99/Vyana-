import React, { useEffect, useState } from 'react';
import { db } from '../firebase.js';
import { collection, addDoc, query, where, getDocs, deleteDoc, doc } from 'https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js';
export default function VendorDashboard(){ 
  const [user,setUser]=useState(null);
  const [products,setProducts]=useState([]);
  const [form,setForm]=useState({title:'',price:'',description:'',stock:''});
  useEffect(()=>{ const uid=localStorage.getItem('vyana_uid'); if(uid){ setUser({uid}); fetchProducts(uid);} },[]);
  const fetchProducts=async(uid)=>{ try{ const q=query(collection(db,'products'), where('vendorId','==',uid)); const snap=await getDocs(q); setProducts(snap.docs.map(d=>({id:d.id,...d.data()}))); }catch(e){console.error(e);} };
  const handleChange=(e)=>setForm({...form,[e.target.name]:e.target.value});
  const addProduct=async(e)=>{ e.preventDefault(); if(!user) return alert('Set vyana_uid in localStorage'); try{ await addDoc(collection(db,'products'),{title:form.title,price:parseFloat(form.price)||0,description:form.description,stock:parseInt(form.stock)||0,vendorId:user.uid,createdAt:new Date().toISOString()}); setForm({title:'',price:'',description:'',stock:''}); fetchProducts(user.uid); alert('Added'); }catch(err){console.error(err); alert('Error');} };
  const removeProduct=async(id)=>{ if(!window.confirm('Delete?')) return; try{ await deleteDoc(doc(db,'products',id)); setProducts(products.filter(p=>p.id!==id)); }catch(e){console.error(e); alert('Failed');} };
  return (<div style={{maxWidth:900,margin:'20px auto',padding:16}}><h2>Vendor Dashboard</h2>{!user && <p style={{color:'#b00'}}>Not logged as vendor. For test: localStorage.setItem('vyana_uid','test-uid')</p>}<div style={{display:'flex',gap:24,flexWrap:'wrap'}}><div style={{flex:'1 1 320px',border:'1px solid #ddd',padding:12,borderRadius:8}}><h3>Add Product</h3><form onSubmit={addProduct}><input name='title' placeholder='Title' value={form.title} onChange={handleChange} required style={{display:'block',width:'100%',margin:'8px 0'}}/><input name='price' placeholder='Price' value={form.price} onChange={handleChange} required style={{display:'block',width:'100%',margin:'8px 0'}}/><input name='stock' placeholder='Stock' value={form.stock} onChange={handleChange} style={{display:'block',width:'100%',margin:'8px 0'}}/><textarea name='description' placeholder='Description' value={form.description} onChange={handleChange} style={{display:'block',width:'100%',margin:'8px 0'}}/><button style={{padding:'8px 12px'}}>Add Product</button></form></div><div style={{flex:'1 1 320px'}}><h3>My Products</h3>{products.length===0 && <p>No products yet.</p>}<ul>{products.map(p=>(<li key={p.id} style={{border:'1px solid #eee',padding:8,marginBottom:8}}><strong>{p.title}</strong> — ₹{p.price}<br/>Stock:{p.stock}<br/><small>{p.description}</small><div style={{marginTop:8}}><button onClick={()=>removeProduct(p.id)} style={{padding:'6px 10px'}}>Delete</button></div></li>))}</ul></div></div></div>); }
